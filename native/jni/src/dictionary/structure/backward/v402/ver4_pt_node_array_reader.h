/*
 * Copyright (C) 2014, The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * !!!!! DO NOT EDIT THIS FILE !!!!!
 *
 * This file was generated from
 *   dictionary/structure/v4/ver4_pt_node_array_reader.h
 */

#ifndef LATINIME_BACKWARD_V402_VER4_PT_NODE_ARRAY_READER_H
#define LATINIME_BACKWARD_V402_VER4_PT_NODE_ARRAY_READER_H

#include "defines.h"
#include "dictionary/structure/pt_common/pt_node_array_reader.h"

namespace latinime {
namespace backward {
namespace v402 {

} // namespace v402
} // namespace backward
class BufferWithExtendableBuffer;
namespace backward {
namespace v402 {

class Ver4PtNodeArrayReader : public PtNodeArrayReader {
 public:
    Ver4PtNodeArrayReader(const BufferWithExtendableBuffer *const buffer) : mBuffer(buffer) {};

    virtual bool readPtNodeArrayInfoAndReturnIfValid(const int ptNodeArrayPos,
            int *const outPtNodeCount, int *const outFirstPtNodePos) const;
    virtual bool readForwardLinkAndReturnIfValid(const int forwordLinkPos,
            int *const outNextPtNodeArrayPos) const;

 private:
    DISALLOW_COPY_AND_ASSIGN(Ver4PtNodeArrayReader);

    const BufferWithExtendableBuffer *const mBuffer;
};
} // namespace v402
} // namespace backward
} // namespace latinime
#endif /* LATINIME_BACKWARD_V402_VER4_PT_NODE_ARRAY_READER_H */
